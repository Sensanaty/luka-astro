---
type BreadcrumbPart = {
  label: string;
  path: string;
  isHome: boolean;
  isActive: boolean;
  isShenanigans?: boolean;
}

// Normalize paths by removing trailing slashes and ensuring leading slash
function normalizePath(path: string): string {
  return '/' + path.split('/').filter(Boolean).join('/');
}

const currentPath = normalizePath(Astro.url.pathname);

const getBreadcrumbParts = (): BreadcrumbPart[] => {
  const parts: string[] = currentPath.split('/').filter(Boolean);
  const isInShenanigans: boolean = currentPath.startsWith('/shenanigans');

  const baseParts: BreadcrumbPart[] = [
    {
      label: "home",
      path: "/",
      isHome: true,
      isActive: currentPath === "/" || currentPath === "",
    },
    {
      label: "shenanigans",
      path: "/shenanigans",
      isActive: currentPath === "/shenanigans",
      isHome: false,
      isShenanigans: true
    }
  ];

  if (isInShenanigans && parts.length > 1) {
    return [
      ...baseParts,
      ...parts.slice(1).map((part: string, index: number) => {
        const fullPath = normalizePath(`/shenanigans/${parts.slice(1, index + 2).join('/')}`);
        return {
          label: part,
          path: fullPath,
          isActive: fullPath === currentPath,
          isHome: false,
        };
      })
    ];
  }

  return baseParts;
};

function getTextColorClass(part: BreadcrumbPart): string {
  if (part.isHome) {
    if (part.isActive) {
      return 'text-amber-500';
    } else {
      return 'text-white';
    }
  }

  if (part.isShenanigans) {
    if (part.isActive) {
      return 'text-amber-500';
    }
    if (normalizePath(currentPath).startsWith('/shenanigans/')) {
      return 'text-white';
    }
    return 'text-neutral-400';
  }

  if (part.isActive) {
    return 'text-amber-500';
  } else {
    return 'text-neutral-400';
  }
}

const breadcrumbParts: BreadcrumbPart[] = getBreadcrumbParts();
---

<header class="flex items-center bg-neutral-800 border-b border-x w-full px-3 pt-1 pb-0.5">
  <p class="font-black text-sm flex items-center gap-3" aria-label="Luka Salević">
    luka-salević
  </p>

  <nav aria-label="Breadcrumb" class="blink flex items-center ml-4">
    <span aria-hidden="true">~/</span>

    <ol class="flex">
      {breadcrumbParts.map((part, index) => (
        <li class="flex items-center">
          {part.isActive ? (
            <a
              href={part.path}
              class={`${getTextColorClass(part)}`}
              aria-current="page"
            >
            {part.label}
          </a>
          ) : (
            <a
              href={part.path}
              class={`hover:text-amber-500 ${getTextColorClass(part)}`}
            >
              {part.label}
            </a>
          )}

          {index < breadcrumbParts.length - 1 && (<span aria-hidden="true">/</span>)}
        </li>
      ))}
    </ol>
  </nav>
</header>

<style>
  .blink::after {
    @apply text-neutral-400 ml-0.5;
    content: "▋";
    animation: blink 900ms step-end infinite;
  }

  @media (prefers-reduced-motion: reduce) {
    .blink::after {
      display: none;
      animation: none;
      content: none;
    }
  }

  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
</style>
