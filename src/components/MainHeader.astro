---
const currentPath = Astro.url.pathname;

const navItems = [
  { path: "/", label: "home" },
  { path: "/shenanigans", label: "shenanigans" },
];

function getNavClass(path: string) {
  const base = "font-bold hover:text-amber-500 hover:decoration-white";
  const active = "text-amber-500";
  const inactive = "text-white underline decoration-2 decoration-amber-500";

  // For home path
  if (path === '/') {
    // Active only if exactly at home
    if (currentPath === '/') return `${base} ${active}`;
    // Always underlined when not at home
    return `${base} ${inactive}`;
  }

  // For other paths
  return `${base} ${currentPath.startsWith(path) ? active : inactive}`;
}

const getBreadcrumbParts = () => {
  if (currentPath === "/") return [{ label: "home", path: "/" }];

  // Split the path and create breadcrumb items
  const parts = currentPath.split('/').filter(Boolean);
  return [
    { label: "home", path: "/" },
    ...parts.map((part, index) => ({
      label: part,
      path: '/' + parts.slice(0, index + 1).join('/')
    }))
  ];
};

const breadcrumbParts = getBreadcrumbParts();
---

<header class="flex items-center bg-neutral-800 border-b border-x w-full px-3 pt-1 pb-0.5">
  <p class="flex items-center font-black text-sm" aria-label="Luka Salević">
    luka-salević
    <span aria-hidden="true" class="blink ml-3 md:hidden flex items-center">
      ~/
      {breadcrumbParts.map((part, index) => (
          <>
            <a href={part.path} class="hover:text-amber-500">{part.label}</a>
            {index < breadcrumbParts.length - 1 && (
              <span>/</span>
            )}
          </>
      ))}
    </span>
  </p>

  <nav class="flex items-center gap-x-2 ml-auto">
    {navItems.map(({ path, label }) => (
      <a href={path} class={getNavClass(path)}>{label}</a>
    ))}
  </nav>
</header>

<style>
  header {
    grid-template: 1fr / 1fr min-content 1fr;
  }

  .blink::after {
    @apply text-neutral-400 ml-0.5;
    content: "▋";
    animation: blink 900ms step-end infinite;
  }

  @media (prefers-reduced-motion: reduce) {
    .blink::after {
      display: none;
      animation: none;
      content: none;
    }
  }

  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
</style>
